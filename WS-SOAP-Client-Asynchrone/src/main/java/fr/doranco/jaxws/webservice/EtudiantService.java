
package fr.doranco.jaxws.webservice;

import java.util.List;
import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EtudiantService", targetNamespace = "http://jaxws.doranco.fr/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EtudiantService {


    /**
     * 
     * @return
     *     returns javax.xml.ws.Response<fr.doranco.jaxws.webservice.GetEtudiantsResponse>
     */
    @WebMethod(operationName = "getEtudiants")
    @RequestWrapper(localName = "getEtudiants", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiants")
    @ResponseWrapper(localName = "getEtudiantsResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantsResponse")
    public Response<GetEtudiantsResponse> getEtudiantsAsync();

    /**
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getEtudiants")
    @RequestWrapper(localName = "getEtudiants", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiants")
    @ResponseWrapper(localName = "getEtudiantsResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantsResponse")
    public Future<?> getEtudiantsAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetEtudiantsResponse> asyncHandler);

    /**
     * 
     * @return
     *     returns java.util.List<fr.doranco.jaxws.webservice.Etudiant>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEtudiants", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiants")
    @ResponseWrapper(localName = "getEtudiantsResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantsResponse")
    @Action(input = "http://jaxws.doranco.fr/EtudiantService/getEtudiantsRequest", output = "http://jaxws.doranco.fr/EtudiantService/getEtudiantsResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://jaxws.doranco.fr/EtudiantService/getEtudiants/Fault/Exception")
    })
    public List<Etudiant> getEtudiants()
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<fr.doranco.jaxws.webservice.GetEtudiantByIdResponse>
     */
    @WebMethod(operationName = "getEtudiantById")
    @RequestWrapper(localName = "getEtudiantById", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantById")
    @ResponseWrapper(localName = "getEtudiantByIdResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantByIdResponse")
    public Response<GetEtudiantByIdResponse> getEtudiantByIdAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getEtudiantById")
    @RequestWrapper(localName = "getEtudiantById", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantById")
    @ResponseWrapper(localName = "getEtudiantByIdResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantByIdResponse")
    public Future<?> getEtudiantByIdAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetEtudiantByIdResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns fr.doranco.jaxws.webservice.Etudiant
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEtudiantById", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantById")
    @ResponseWrapper(localName = "getEtudiantByIdResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.GetEtudiantByIdResponse")
    @Action(input = "http://jaxws.doranco.fr/EtudiantService/getEtudiantByIdRequest", output = "http://jaxws.doranco.fr/EtudiantService/getEtudiantByIdResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://jaxws.doranco.fr/EtudiantService/getEtudiantById/Fault/Exception")
    })
    public Etudiant getEtudiantById(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<fr.doranco.jaxws.webservice.AddEtudiantResponse>
     */
    @WebMethod(operationName = "addEtudiant")
    @RequestWrapper(localName = "addEtudiant", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.AddEtudiant")
    @ResponseWrapper(localName = "addEtudiantResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.AddEtudiantResponse")
    public Response<AddEtudiantResponse> addEtudiantAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Etudiant arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "addEtudiant")
    @RequestWrapper(localName = "addEtudiant", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.AddEtudiant")
    @ResponseWrapper(localName = "addEtudiantResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.AddEtudiantResponse")
    public Future<?> addEtudiantAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Etudiant arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<AddEtudiantResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns fr.doranco.jaxws.webservice.Etudiant
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addEtudiant", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.AddEtudiant")
    @ResponseWrapper(localName = "addEtudiantResponse", targetNamespace = "http://jaxws.doranco.fr/", className = "fr.doranco.jaxws.webservice.AddEtudiantResponse")
    @Action(input = "http://jaxws.doranco.fr/EtudiantService/addEtudiantRequest", output = "http://jaxws.doranco.fr/EtudiantService/addEtudiantResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://jaxws.doranco.fr/EtudiantService/addEtudiant/Fault/Exception")
    })
    public Etudiant addEtudiant(
        @WebParam(name = "arg0", targetNamespace = "")
        Etudiant arg0)
        throws Exception_Exception
    ;

}
